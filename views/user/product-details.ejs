<%- include("../../views/partials/user/header") %>



<style>
    .ProductContainer {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        margin-top: 5%;
        display: flex;
        flex-direction: column;
        gap: 30px;
    }

    .product-detail {
        display: flex;
        flex-wrap: wrap;
        gap: 40px;
        align-items: flex-start;
    }

    .product-images {
        flex: 1;
        min-width: 300px;
        max-width: 50%;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .main-image-container {
        position: relative;
        overflow: hidden;
        width: 100%;
        padding-top: 100%; 
        border-radius: 8px;
        border: 1px solid #ddd;
        background-color: #f8f9fa;
    }

    .main-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
    }

    .thumbnail-strip {
        display: flex;
        gap: 10px;
        overflow-x: auto;
        padding-bottom: 10px;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
        cursor: pointer;
        border: 2px solid transparent;
        transition: border-color 0.3s ease;
    }

    .thumbnail.active {
        border-color: #007bff;
    }

    .product-info {
        flex: 1;
        min-width: 300px;
        max-width: 50%;
    }

    h1 {
        font-size: 28px;
        margin-bottom: 15px;
        color: #333;
    }

    .rating {
        color: #ffc107;
        font-size: 18px;
        margin-bottom: 10px;
    }

    .price {
        font-size: 28px;
        font-weight: bold;
        color: #007bff;
        margin: 15px 0;
        display: flex;
        align-items: center;
    }

    .old-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 18px;
        margin-left: 10px;
    }

    .quantity {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    .quantity button {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        padding: 8px 12px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
    }

    .quantity button:hover {
        background-color: #e9ecef;
    }

    .quantity span {
        padding: 8px 15px;
        border: 1px solid #ced4da;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
    }

    .add-to-cart {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 12px 25px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
        margin-top: 15px;
    }

    .add-to-cart:hover {
        background-color: #0056b3;
    }

    .product-meta {
        margin-top: 25px;
        font-size: 14px;
        color: #6c757d;
        line-height: 1.6;
    }

    @media (max-width: 768px) {
        .product-detail {
            flex-direction: column;
            align-items: center;
        }

        .product-images, .product-info {
            max-width: 100%;
        }

        h1 {
            text-align: center;
        }

        .price {
            justify-content: center;
        }

        .add-to-cart {
            display: block;
            width: 100%;
            text-align: center;
        }
    }
    .related-products {
  margin: 40px 0;
  text-align: center;
}

.related-products h1 {
  font-size: 28px;
  font-weight: bold;
  margin-bottom: 20px;
}

.related-products .product-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
}

.single-product-item {
  width: 100%;
  max-width: 250px;
  background: #f9f9f9;
  border: 1px solid #ddd;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.single-product-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.single-product-item figure {
  position: relative;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.single-product-item figure img {
  width: 100%;
  height: auto;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.single-product-item figure:hover img {
  transform: scale(1.05);
}

.single-product-item .p-status {
  position: absolute;
  top: 10px;
  left: 10px;
  background: #ff4d4f;
  color: #fff;
  font-size: 12px;
  font-weight: bold;
  padding: 5px 10px;
  border-radius: 5px;
  text-transform: uppercase;
}

.product-text {
  padding: 15px;
  text-align: center;
}

.product-text h6 {
  font-size: 16px;
  font-weight: bold;
  margin: 10px 0;
}

.product-text p {
  font-size: 14px;
  color: #555;
  margin: 0;
}

@media (max-width: 768px) {
  .single-product-item {
    max-width: 200px;
  }
}

@media (max-width: 576px) {
  .single-product-item {
    max-width: 150px;
  }
}

</style>

    <div class="ProductContainer">
        <div class="product-detail">
            <div class="product-images">
                <div class="main-image-container" onmousemove="zoomImage(event)" onmouseleave="resetZoom(event)">
                    <img id="mainImage" src="/uploads/re-image/<%=product.productImage[0]%>" alt="Product Image" class="main-image" onmouseleave="resetZoom(event)" >
                </div>
                <div class="thumbnail-strip">
                    <%for(let i=0;i<product.productImage.length;i++){%>
                        <div>
                            <img src="/uploads/re-image/<%=product.productImage[i]%>"  alt="Product Thumbnail 1" class="thumbnail active" onclick="changeImage(this)">
                        </div>
                    <%}%>
                
                </div>
            </div>
            <div class="product-info">
                <h3><%=product.productName%></h3>
                <div class="rating">
                    ★★★★☆ <span style="color: #6c757d; font-size: 14px;">(25 reviews)</span>
                </div>
                <p><%=product.description%></p>
                <div class="price">
                   ₹<%=product.regularPrice%><span class="old-price"></span>
                </div>
                <div class="quantity">
                    <button onclick="changeQuantity(-1)">-</button>
                    <span id="quantity">1</span>
                    <button onclick="changeQuantity(1)">+</button>
                </div>
                <button class="add-to-cart" onclick="addToCart('<%=product._id%>')">Add to Cart</button>
                <div class="product-meta">
                    <p>Stock Code: FWM15VKT</p>
                    <p>Availability: <span id="productQuatity" style="color: #28a745;"><%=quantity%></span></p>
                </div>
            </div>
        </div>
    </div><br><br><br>
    <div style="display: flex; flex-direction: row;">
        <h5>Related Product</h5>
        <%for(let i=0; i <recommendedProduct.length ; i++){%>
            
            <div class="col-lg-3 col-sm-6 mix all dresses bags">
                <div class="single-product-item">
                    <figure>
                        <a href="/productDetails?id=<%=recommendedProduct[i]?._id%>"><img src="/uploads/re-image/<%=recommendedProduct[i]?.productImage[0]%>" alt=""></a>
                        <div class="p-status">new</div>
                    </figure>
                    <div class="product-text">
                        <h6><%=recommendedProduct[i].productName%></h6>
                        <p>₹<%=recommendedProduct[i].salePrice%></p>
                    </div>
                </div>
            </div>
            <%}%>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        function changeImage(thumbnail) {
            const mainImage = document.getElementById('mainImage');
            mainImage.src = thumbnail.src;
            mainImage.alt = thumbnail.alt;
            
            
            document.querySelectorAll('.thumbnail').forEach(thumb => {
                thumb.classList.remove('active');
            });
            thumbnail.classList.add('active');
        }

        function changeQuantity(change) {
            let max=5
            let min=1
            const quantityElement = document.getElementById('quantity');
            const productQuatity=document.getElementById('productQuatity').textContent
            let quantity = parseInt(quantityElement.textContent) + change;
            if(quantity<min){
                Swal.fire({
                    title: 'Minimum',
                    text: 'minimum quatity is 1 ',
                    icon: 'warning',
                    confirmButtonColor: '#3085d6'
                });
                return

            }else if(quantity>max){
                Swal.fire({
                    title: 'Maximum',
                    text: 'maximum quatity is 5 ',
                    icon: 'warning',
                    confirmButtonColor: '#3085d6'
                });
                return

            }else if(quantity>parseInt(productQuatity)){
                Swal.fire({
                    title: 'Maximum',
                    text: 'not enough stock ',
                    icon: 'warning',
                    confirmButtonColor: '#3085d6'
                });
                return

            }
            quantityElement.textContent = quantity;
        }

        async function addToCart(id) {
            const quantity = document.getElementById('quantity').textContent;
             
            Swal.fire({
                title:"Add to Cart",
                allowOutsideClick:false,
                didOpen:()=>{
                    Swal.showLoading();
                
                }
            });
            try {
                const response=await fetch(`/addToCart`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        quantity: parseInt(quantity),
                        productId: id 
                    }),
                })
                const data = await response.json(); 
                if (response.ok) {
                    // Success message
                    Swal.fire({
                        title: 'Added to Cart!',
                        text: `Successfully added ${quantity} item(s) to your cart`,
                        icon: 'success',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Go to Cart',
                        cancelButtonText: 'Continue Shopping'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Redirect to cart page
                            window.location.href = '/showCart';
                        }
                    });
                } else {
                    // Error message for failed response
                    Swal.fire({
                        title: 'Oops...',
                        text: 'Failed to add item to cart. Please try again.',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                }
            
                
            } catch (error) {
                console.error("Error:", error);
                // Error message for network/server errors
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong. Please try again later.',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
                
            }
            
        }


        function zoomImage(e) {
            const image = e.target;
            const zoomer = e.currentTarget;
            const x = e.offsetX / zoomer.offsetWidth;
            const y = e.offsetY / zoomer.offsetHeight;
            const zoomLevel = 2;
            image.style.transformOrigin = `${x * 100}% ${y * 100}%`;
            image.style.transform = `scale(${zoomLevel})`;
        }

        function resetZoom(e) {
            console.log("mouse leaved");
            
            const image = e.target;
            image.style.transformOrigin = 'center center';
            image.style.transform = 'scale(1)';
        }
    </script>
<%- include("../../views/partials/user/footer") %>













